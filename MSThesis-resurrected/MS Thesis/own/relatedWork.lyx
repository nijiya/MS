#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass book
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Related Work Study
\end_layout

\begin_layout Author
TuÄŸcem Oral
\end_layout

\begin_layout Chapter*
Introduction
\end_layout

\begin_layout Standard
Path planning for virtual environments -where specified entities or (intelligent
) forms try to reach from specific initial point to desired- is a problem
 which has been studying and researching for many years.
 Thus, science world come up with many solutions for this issue.
 However, real-world is not as simple as we though for virtual world that
 considering only single-criteria for finding an optimal or sub-optimal
 path may become insufficient.
 As a result, multiple-criteria cases are distinguished and more complicated
 algorithms come into use.
 It can be seen that more realistic and robust results can be obtained with
 these algorithms because they expand solution perspective.
\end_layout

\begin_layout Standard
In this study, i cover well accepted papers centered on multi-objective
 path planning in virtual environments.
 Most of these papers are new-accepted papers that they published within
 five years.
 These studies will define my road and light the way of my master thesis.
\end_layout

\begin_layout Chapter*
Related Studies
\end_layout

\begin_layout Standard
I classify related works about my thesis subject within several categories.
 Some authors concentrate on path planning through moving targets and some
 of them cares multi-objectivity.
 On the other side, there exist several authors that use evolutionary methods
 to generate the path from some initial point to final one.
 Needless to say, there are some papers that we can not put into such categories
, like which compare several path planning methods or (efficiencies and
 complexities of) algorithms.
\end_layout

\begin_layout Section*
Papers Center on Moving-Target Concept
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset citation
LatexCommand cite
key "Hollinger:2009:EMS:1497541.1497543"

\end_inset

, Hollinger et al.
 concentrate on the problem of finding a moving, non-adversarial, known
 motion modeled target using multiple agents (robotic searchers) in a closed
 virtual environment.
 They define this as Multi-robot Efficient Search Path Planning (MESPP)
 problem.
 These typical problems are NP-hard and number of searchers increase the
 solution space exponentially.
\end_layout

\begin_layout Standard
MESPP problem is modeled using a Partially Observable Markov Decision Process
 (POMDV) in this paper.
 They show that POMDV is insufficient to handle large-scaled MESPP problems
 but their proposed algorithm overcomes this problem.
 They also prove it with their results.
\end_layout

\begin_layout Standard
They present an algorithm that utilizes finite-horizon planning and implicit
 coordination to achieve linear scalability in the number of searchers.
 Also their algorithm uses sequential allocation to reduce computational
 complexity for multiple searchers in huge environments.
 Sequential allocation is an instance of implicit coordination during which
 multiple agents share information rather than planning in the joint path
 space.
 Implicit coordination is linearly scalable, and it remains tractable in
 large problem instances when exponential methods using explicit coordination
 are far beyond computational limits.
 Their metric results show that the algorithm generates paths competitive
 with those generated by other exponential algorithms.
 
\end_layout

\begin_layout Standard
Goldenberg et al.
 use multi-agent systems to pursue and capture the moving target instead
 of using a single agent system in 
\begin_inset CommandInset citation
LatexCommand cite
key "Goldenberg:2003:MAM:1630659.1630925"

\end_inset

.
 Agents are allowed to communicate with each other if they are within their
 sight-area.
 Environment is a 
\emph on
m x n 
\emph default
grid with randomly-placed obstacles, all agents and the target knows the
 topology of the world.
 They target is positioned at the middle of the grid and all the agents
 are placed at the lower left corner of the grid at initial.
 At least one of the agents can 
\emph on
see 
\emph default
the target.
 The objective is catching the target in the minimum number of movement.
\end_layout

\begin_layout Standard
Actually, they do 
\emph on
not 
\emph default
come up with a new search algorithm, they just plug-in well known search
 algorithms to their framework and find out which one gives the best results.
 They compare different solutions, varying number of agents and density
 of obstacles.
\end_layout

\begin_layout Standard
Sun et al.
 propose an efficient incremental search algorithm for moving target search
 in 
\begin_inset CommandInset citation
LatexCommand cite
key "Sun:2009:EIS:1661445.1661543"

\end_inset

.
 Bedrock of incremental search algorithms is using generated information
 from previous searches.
 This speeds up the current search and facilitates to find shortest paths
 for similar search problems instead of trying to solve them independently
 from scratch.
 However, they become insufficient on moving target search problems, where
 both the goal and/or start cells change over time.
 Thus, they introduce an extension of incremental A*, Fringe-Retrieving
 A* (FRA*) for moving-target problems in grid environment.
\end_layout

\begin_layout Standard
The execution of FRA* is based on A* that it repeatedly transforms the previousl
y found search tree with considering the new positions of initial and target
 cells.
 They demonstrate on experimental results that this algorithm runs up to
 one order of magnitude faster than known incremental search algorithms
 like D* Like, Differential A* and MT-Adaptive A*.
 They propose that this difference occurs because none of the other incremental
 search algorithms that transform the previous search tree to the current
 one were specifically designed for moving target search.
 They are only efficient if the start cell remains unchanged from search
 to search.
\end_layout

\begin_layout Standard
The same team, Sun et.
 al, introduce the moving target D* lite algorithm in 
\begin_inset CommandInset citation
LatexCommand cite
key "D*Lite-Koenig"

\end_inset

 in 2010.
 They mention about the suffers of incremental search algorithms like D*
 lite while finding paths in moving-target environments, and they give the
 extension of D* lite which uses the principle behind Generalized Fringe-Retriev
ing A* (GFA*) to repeatedly calculate a cost-minimal path from initial to
 the target in environments whose blockages can change over time.
 Their experimental results show that moving target D* lite is believed
 to be the fastest incremental search algorithm for moving target problems
 so far.
\end_layout

\begin_layout Standard
In their paper, they handle searching for path planning in a broad perspective.
 They give a strong background which clarifies the inspired basic incremental
 search algorithms.
 They propose both 
\begin_inset Quotes eld
\end_inset

Basic Moving Target D* Lite
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Moving Target D* Lite
\begin_inset Quotes erd
\end_inset

.
 MT- D* Lite is the optimized version of Basic MT- D* Lite which has more
 sophisticated sub-steps.
 
\end_layout

\begin_layout Standard
They compare Basic MT-D* Lite and MT-D* Lite against A*, Differential A*,
 Generalized Adaptive A* (GAA*), Fringe-Retrieving A* (FRA*) and Generalized
 FRA* (G-FRA*) for solving moving target search problems in their experiments.
 As their results; FRA* has the smallest runtime in static environments,
 and MT-D* Lite has the smallest runtime in dynamic environments, where
 it is four to five times faster than GAA*.
\end_layout

\begin_layout Standard
The Koenig's same team concentrate on path planning for unmanned ground
 vehicles in robotic applications in 
\begin_inset CommandInset citation
LatexCommand cite
key "Sun:2010:GFF:1838206.1838352"

\end_inset

.
 They generalize Fringe-Retrieving A* (FRA*) to Generalized Fringe-Retrieving
 A*, which solves moving target search problems on arbitrary graphs, including
 the state lattices used for UGV navigation.
\end_layout

\begin_layout Standard
Default test domains for moving target search algorithms are know as two-dimensi
onal grids.
 They include obstacles and free cells.
 But when UGVs comes into play, state lattices suits well to planning for
 non-holonomic and highly constrained robotic systems with limited maneuverabili
ty.
 State lattices are extensions of 2-D grids that they are able to model
 motion constraints
\begin_inset CommandInset citation
LatexCommand cite
key "Kushleyev:2009:TLE:1703775.1704139"

\end_inset

.
 A state lattice is constructed by discretizing the configuration space
 into a high-dimensional grid and connecting the cells of the grid with
 motion primitives, which are the building blocks for more complicated motions.
\end_layout

\begin_layout Standard
In incremental search algorithm jargon, the agent who tries to chase and
 catch the target (say, hunter) wants to follow the minimal-cost path and
 re-plans a new path whenever the targets moves off the previous path.
 This process is iterated until the hunter catches the target.
 Fringe-Retrieving A* (FRA*) is the fastest incremental search algorithm
 for recomputing paths for the hunter on two-dimensional grids according
 to their first study in 
\begin_inset CommandInset citation
LatexCommand cite
key "Sun:2009:EIS:1661445.1661543"

\end_inset

.
 However, FRA* uses geometric properties that are specific to 2-D grids
 and this fact yields unsatisfactory results on state lattices for UGVs.
 Thus, they come up with G-FRA*.
\end_layout

\begin_layout Standard
Their experimental results show that G-FRA* could be very fast for moving
 target search on state lattices.
 Generalized Adaptive A* (GAA*)
\begin_inset CommandInset citation
LatexCommand cite
key "Sun:2008:GA:1402383.1402451"

\end_inset

 was proven as the fastest incremental search algorithm so far for moving
 target search on arbitrary graphs.
 However, they beat themselves with G-FRA* that it can be up to one order
 of magnitude faster than GAA*.
\end_layout

\begin_layout Section*
Papers Center on Multi-Optimization
\end_layout

\begin_layout Standard
While many authors play with moving targets, obstacles and searchers (agents
 who pursuit targets) in dynamic environments, very many of others are busy
 with multiple criteria while reaching from initial state to target.
 For multiple criteria on path planning, both considering fuel consumption
 (as a consequence, the shortest path) and passing around anti-aircrafts'
 radar detectors can be given as an example for unmanned aerial vehicles
 (UAVs).
 Here are some studies center around this phenomenon.
\end_layout

\begin_layout Standard
Guo et al.
 concentrate on the problem of multi-objective path planning (MOPP) for
 the ball and plate system in 
\begin_inset CommandInset citation
LatexCommand cite
key "5262574"

\end_inset

.
 The goal of MOPP is to obtain the safe (without colliding hazardous obstacles)
 and shortest path for the ball to follow.
 The environment is represented by distance map (the euclidean distances
 between initial and target cells) and hazard map (which represents possible
 collisions between the ball and the obstacles).
 They use entropy method to calculate weights of objectives for each grid
 node.
 Simply, Dijkstra algorithm is employed as a solution.
 In simulation results, the path obtained by multi-objective method is much
 safer compared with single-objective A* algorithm.
\end_layout

\begin_layout Standard
Tarapata presents selected multi-objective approaches to shortest path problems
 in his paper 
\begin_inset CommandInset citation
LatexCommand cite
key "Tarapata:2007:SMS:1721992.1722003"

\end_inset

.
 He gives a classification of multi-objective shortest path (MOSP) problems.
 and discuss different models of them.
 Also he present methods of solving the formulated optimization problems.
 Analysis of the complexity of the presented methods and ways of adapting
 of classical algorithms for solving MOSP problems are described in detail.
 The comparison of the effectiveness of solving selected MOSP problems are
 defined as mathematical programming problems (using by the CPLEX 7.0 solver)
 and multi-weighted graph problems (using modified Dijkstraâ€™s algorithm).
 Experimental results of using the presented methods for multi criteria
 path selection in a terrain-based grid network are given.
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset citation
LatexCommand cite
key "1272513"

\end_inset

, Mitchell et al.
 examine the problem of planning a path through a low dimensional continuous
 state space subject to upper bounds on several additive cost metrics.
 For the single cost case, their previously published research has proposed
 constructing the paths by gradient descent on a local minimal free value
 function.
 This value function is the solution of the 
\emph on
Eikonal partial differential equation
\emph default
, and efficient algorithms have been designed to compute it.
 In their paper, they propose an auxiliary partial differential equation
 with which they evaluate multiple additive cost metrics for paths which
 are generated by value functions; solving this auxiliary equation adds
 little more work to the value function computation.
 They also propose an algorithm which generates paths whose costs lie on
 the Pareto optimal surface for each possible destination locations, and
 a path can be chosen from these paths those which satisfy the constraints.
 The procedure is practical when the sum of the state space dimension and
 number of cost metrics is roughly six or below.
 Their paper includes heavy mathematical notations that it is hard to keep
 track of reading.
\end_layout

\begin_layout Section*
Papers Use Alternative Methods
\end_layout

\begin_layout Standard
For virtual environments, there exist many other proposals for path planning
 from evolutionary methods to optimization techniques.
 These proposals 
\emph on
generally
\emph default
 intensify on multi-objectivity angle, rather than moving agents or targets.
\end_layout

\begin_layout Standard
Bukhari et al.
 comes up with an optimization technique for dynamic online path planning
 and optimization of the path 
\begin_inset CommandInset citation
LatexCommand cite
key "key:article"

\end_inset

.
 It addresses the issues involved during path planning in dynamic and unknown
 environments cluttered with obstacles and objects.
 A simulated ant agent system is proposed using modified ant colony optimization
 algorithm for dealing with online path planning.
 It is compared with evolutionary techniques on randomly generated environments;
 with constraints like different obstacle ratio and grid sizes.
 The proposed algorithm generates and optimizes paths in complex and large
 environments with several constraints.
\end_layout

\begin_layout Standard
Nasrollahy et al.
 proposes a particle swarm optimization algorithm as a multi-agent search
 technique, for path planning in dynamic and known environments in order
 to minimize total path planning time while avoiding the local optimums
 
\begin_inset CommandInset citation
LatexCommand cite
key "10.1109/EMS.2009.67"

\end_inset

.
 They create a small-scale model of search system moving goal position and
 obstacles.
 These obstacles are defined as circular shapes and agents get around of
 these obstacles.
 They try to optimize global best path through the goal position.
 Although they mention about effectivity of proposed algorithm, they don't
 give concrete results and comparisons with other methods.
\end_layout

\begin_layout Standard
A recent study by Pangilinan et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Pangilinan:EAforMSPP"

\end_inset

 introduce an evolutionary algorithm for multi-objective shortest path problem
 (MOSSP).
 They draw the picture of their 2-D static (stable obstacles and target)
 environment as a graph.
 Initial population is created by randomly generated individuals where each
 has a random ordered path from initial position to goal position.
 They use binary tournament selection for mating.
 Strength Pareto Evolutionary Algorithm (SPEA2) 
\begin_inset CommandInset citation
LatexCommand cite
key "Zitzler01spea2:improving"

\end_inset

 evaluates fitness values of individuals and selects them for survival.
 They define density function of fitness evaluation to avoid from genetic
 drift.
 For genetic operators, they use one-point crossover and mutation.
 Their results show that their algorithm is a good alternative in finding
 a subset of efficient solutions for multi-objective shortest path problems
 when performance issues like complexity, diversity and non-dominal optimal
 solutions become obstructions.
\end_layout

\begin_layout Standard
Dozier et al.
 gives a new selection method for multi objective path planning(MOPP) in
 
\begin_inset CommandInset citation
LatexCommand cite
key "700122"

\end_inset

.
 They introduce fuzzy tournament selection algorithm which combines fuzzy
 inference with tournament selection to select candidate solution paths.
 This selection is based on the euclidean distance from initial to goal
 position, the sum of the changes and the average change in the slope of
 a path.
\end_layout

\begin_layout Standard
Castillo et al.
 also worked on evolutionary algorithms for MOPP in 
\begin_inset CommandInset citation
LatexCommand cite
key "Castillo:2006:MOG:1178398.1178406"

\end_inset

.
 They define a genetic 
\emph on
offline
\emph default
 point-to-point agent path planner which tries to find valid paths.
 They concentrate on two constraints which are path length and difficulty
 (each path has a difficulty which calculated from predefined weights) in
 their 2-D static grid environment.
 They compare their results with papers from 90's and get better results.
\end_layout

\begin_layout Standard
A complete discussion of multi-objective evolutionary algorithms (MOEA)
 can be found in 
\begin_inset CommandInset citation
LatexCommand cite
key "MOOUEA"

\end_inset

.
 Also 
\begin_inset CommandInset citation
LatexCommand cite
key "Coello:2000:USG:358923.358929"

\end_inset

, gives a summary of current approaches in MOEA and emphasizes the importance
 of new approaches in exploiting the capabilities of evolutionary algorithms
 in multi-objective optimization.
\end_layout

\begin_layout Chapter*
Conclusion
\end_layout

\begin_layout Standard
As it can be seen from different categories of general path finding problem,
 multi-objectivity concept is starting to become out-of-bounds.
 Published papers about this concept are older than other path finding based
 papers, especially from moving-target based ones.
 It is clear that scientific researches and publications are converge to
 dynamic environments.
 It is no wonder I could not cover the whole bibliography about this subject,
 but these publications are the benchmarks of path-finding problems in computer
 science.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "relatedWork"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
