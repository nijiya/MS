%!PS-Adobe-2.0
%%Title: /home/tugcem/Desktop/ppe/graphics/125x125with50sensorExecSteps.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Thu May 31 03:06:10 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/tugcem/Desktop/ppe/graphics/125x125with50sensorExecSteps.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (tugcem)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu May 31 03:06:10 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
1.000 UL
LTb
1098 576 M
63 0 V
5714 0 R
-63 0 V
stroke
990 576 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
1.000 UL
LTb
1098 1066 M
63 0 V
5714 0 R
-63 0 V
stroke
990 1066 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 2000)]
] -60.0 MRshow
1.000 UL
LTb
1098 1557 M
63 0 V
5714 0 R
-63 0 V
stroke
990 1557 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 4000)]
] -60.0 MRshow
1.000 UL
LTb
1098 2047 M
63 0 V
5714 0 R
-63 0 V
stroke
990 2047 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 6000)]
] -60.0 MRshow
1.000 UL
LTb
1098 2538 M
63 0 V
5714 0 R
-63 0 V
stroke
990 2538 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 8000)]
] -60.0 MRshow
1.000 UL
LTb
1098 3028 M
63 0 V
5714 0 R
-63 0 V
stroke
990 3028 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10000)]
] -60.0 MRshow
1.000 UL
LTb
1098 3518 M
63 0 V
5714 0 R
-63 0 V
stroke
990 3518 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 12000)]
] -60.0 MRshow
1.000 UL
LTb
1098 4009 M
63 0 V
5714 0 R
-63 0 V
stroke
990 4009 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 14000)]
] -60.0 MRshow
1.000 UL
LTb
1098 4499 M
63 0 V
5714 0 R
-63 0 V
stroke
990 4499 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 16000)]
] -60.0 MRshow
1.000 UL
LTb
1098 576 M
0 63 V
0 3860 R
0 -63 V
stroke
1098 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
1.000 UL
LTb
1740 576 M
0 63 V
0 3860 R
0 -63 V
stroke
1740 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20)]
] -60.0 MCshow
1.000 UL
LTb
2382 576 M
0 63 V
0 3860 R
0 -63 V
stroke
2382 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 40)]
] -60.0 MCshow
1.000 UL
LTb
3024 576 M
0 63 V
0 3860 R
0 -63 V
stroke
3024 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 60)]
] -60.0 MCshow
1.000 UL
LTb
3666 576 M
0 63 V
0 3860 R
0 -63 V
stroke
3666 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 80)]
] -60.0 MCshow
1.000 UL
LTb
4307 576 M
0 63 V
0 3860 R
0 -63 V
stroke
4307 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 100)]
] -60.0 MCshow
1.000 UL
LTb
4949 576 M
0 63 V
0 3860 R
0 -63 V
stroke
4949 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 120)]
] -60.0 MCshow
1.000 UL
LTb
5591 576 M
0 63 V
0 3860 R
0 -63 V
stroke
5591 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 140)]
] -60.0 MCshow
1.000 UL
LTb
6233 576 M
0 63 V
0 3860 R
0 -63 V
stroke
6233 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 160)]
] -60.0 MCshow
1.000 UL
LTb
6875 576 M
0 63 V
0 3860 R
0 -63 V
stroke
6875 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 180)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1098 4499 N
0 -3923 V
5777 0 V
0 3923 V
-5777 0 V
Z stroke
LCb setrgbcolor
144 2537 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (Milliseconds)]
] -60.0 MCshow
grestore
LTb
LCb setrgbcolor
3986 126 M
[ [(Helvetica) 180.0 0.0 true true 0 (Number of Iterations)]
] -60.0 MCshow
LTb
3986 4769 M
[ [(Helvetica) 180.0 0.0 true true 0 (125x125 Map with 50% Sensor Range)]
] -60.0 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
0.60 0.00 0.20 C LCb setrgbcolor
6056 4346 M
[ [(Helvetica) 180.0 0.0 true true 0 (MOA* )]
] -60.0 MRshow
LT0
0.60 0.00 0.20 C 6164 4346 M
495 0 V
1130 765 M
32 -74 V
32 -88 V
32 1 V
32 17 V
33 -13 V
32 1 V
32 3 V
32 2 V
32 3 V
32 2 V
32 6 V
32 3 V
32 4 V
32 3 V
33 5 V
32 7 V
32 11 V
32 6 V
32 9 V
32 8 V
32 7 V
32 7 V
32 16 V
32 6 V
32 25 V
33 -3 V
32 9 V
32 15 V
32 -1 V
32 21 V
32 10 V
32 6 V
32 19 V
32 26 V
32 10 V
32 21 V
33 24 V
32 12 V
32 21 V
32 25 V
32 83 V
32 54 V
32 8 V
32 47 V
32 40 V
32 44 V
33 44 V
32 42 V
32 40 V
32 69 V
32 -69 V
32 27 V
32 26 V
32 63 V
32 90 V
32 73 V
32 -59 V
33 -77 V
32 13 V
32 78 V
32 110 V
32 -76 V
32 -76 V
32 5 V
32 -3 V
32 18 V
32 133 V
33 -131 V
32 -6 V
32 -11 V
32 15 V
32 15 V
32 -7 V
32 176 V
32 50 V
32 38 V
32 -149 V
32 -24 V
33 151 V
32 131 V
32 1 V
32 61 V
32 -18 V
32 106 V
32 90 V
32 86 V
32 34 V
32 -27 V
32 88 V
33 111 V
32 54 V
32 58 V
32 135 V
32 -57 V
32 -25 V
32 107 V
32 178 V
32 374 V
32 -185 V
33 41 V
32 266 V
32 -49 V
stroke 4404 3381 M
32 -119 V
32 149 V
32 -24 V
32 -228 V
32 -148 V
32 43 V
32 -324 V
32 -63 V
33 -57 V
32 -72 V
32 214 V
32 -76 V
32 -288 V
32 -7 V
32 43 V
32 155 V
32 235 V
32 107 V
33 33 V
32 143 V
32 -206 V
32 446 V
32 274 V
32 248 V
32 -161 V
32 123 V
32 143 V
32 100 V
32 -249 V
33 -310 V
32 18 V
32 -143 V
32 -62 V
32 155 V
32 -284 V
32 61 V
32 57 V
32 33 V
32 -246 V
33 -242 V
32 -92 V
32 -293 V
32 -105 V
32 -95 V
32 -62 V
32 -130 V
32 -69 V
32 -10 V
32 -36 V
32 -4 V
33 -38 V
32 -13 V
32 -6 V
32 -8 V
32 -24 V
32 51 V
32 -10 V
32 13 V
32 10 V
32 202 V
32 98 V
33 -136 V
32 92 V
32 247 V
32 -215 V
32 -80 V
32 -99 V
32 -131 V
32 -533 V
32 -27 V
1130 765 Pls
1162 691 Pls
1194 603 Pls
1226 604 Pls
1258 621 Pls
1291 608 Pls
1323 609 Pls
1355 612 Pls
1387 614 Pls
1419 617 Pls
1451 619 Pls
1483 625 Pls
1515 628 Pls
1547 632 Pls
1579 635 Pls
1612 640 Pls
1644 647 Pls
1676 658 Pls
1708 664 Pls
1740 673 Pls
1772 681 Pls
1804 688 Pls
1836 695 Pls
1868 711 Pls
1900 717 Pls
1932 742 Pls
1965 739 Pls
1997 748 Pls
2029 763 Pls
2061 762 Pls
2093 783 Pls
2125 793 Pls
2157 799 Pls
2189 818 Pls
2221 844 Pls
2253 854 Pls
2285 875 Pls
2318 899 Pls
2350 911 Pls
2382 932 Pls
2414 957 Pls
2446 1040 Pls
2478 1094 Pls
2510 1102 Pls
2542 1149 Pls
2574 1189 Pls
2606 1233 Pls
2639 1277 Pls
2671 1319 Pls
2703 1359 Pls
2735 1428 Pls
2767 1359 Pls
2799 1386 Pls
2831 1412 Pls
2863 1475 Pls
2895 1565 Pls
2927 1638 Pls
2959 1579 Pls
2992 1502 Pls
3024 1515 Pls
3056 1593 Pls
3088 1703 Pls
3120 1627 Pls
3152 1551 Pls
3184 1556 Pls
3216 1553 Pls
3248 1571 Pls
3280 1704 Pls
3313 1573 Pls
3345 1567 Pls
3377 1556 Pls
3409 1571 Pls
3441 1586 Pls
3473 1579 Pls
3505 1755 Pls
3537 1805 Pls
3569 1843 Pls
3601 1694 Pls
3633 1670 Pls
3666 1821 Pls
3698 1952 Pls
3730 1953 Pls
3762 2014 Pls
3794 1996 Pls
3826 2102 Pls
3858 2192 Pls
3890 2278 Pls
3922 2312 Pls
3954 2285 Pls
3986 2373 Pls
4019 2484 Pls
4051 2538 Pls
4083 2596 Pls
4115 2731 Pls
4147 2674 Pls
4179 2649 Pls
4211 2756 Pls
4243 2934 Pls
4275 3308 Pls
4307 3123 Pls
4340 3164 Pls
4372 3430 Pls
4404 3381 Pls
4436 3262 Pls
4468 3411 Pls
4500 3387 Pls
4532 3159 Pls
4564 3011 Pls
4596 3054 Pls
4628 2730 Pls
4660 2667 Pls
4693 2610 Pls
4725 2538 Pls
4757 2752 Pls
4789 2676 Pls
4821 2388 Pls
4853 2381 Pls
4885 2424 Pls
4917 2579 Pls
4949 2814 Pls
4981 2921 Pls
5014 2954 Pls
5046 3097 Pls
5078 2891 Pls
5110 3337 Pls
5142 3611 Pls
5174 3859 Pls
5206 3698 Pls
5238 3821 Pls
5270 3964 Pls
5302 4064 Pls
5334 3815 Pls
5367 3505 Pls
5399 3523 Pls
5431 3380 Pls
5463 3318 Pls
5495 3473 Pls
5527 3189 Pls
5559 3250 Pls
5591 3307 Pls
5623 3340 Pls
5655 3094 Pls
5688 2852 Pls
5720 2760 Pls
5752 2467 Pls
5784 2362 Pls
5816 2267 Pls
5848 2205 Pls
5880 2075 Pls
5912 2006 Pls
5944 1996 Pls
5976 1960 Pls
6008 1956 Pls
6041 1918 Pls
6073 1905 Pls
6105 1899 Pls
6137 1891 Pls
6169 1867 Pls
6201 1918 Pls
6233 1908 Pls
6265 1921 Pls
6297 1931 Pls
6329 2133 Pls
6361 2231 Pls
6394 2095 Pls
6426 2187 Pls
6458 2434 Pls
6490 2219 Pls
6522 2139 Pls
6554 2040 Pls
6586 1909 Pls
6618 1376 Pls
6650 1349 Pls
6411 4346 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
0.00 0.00 0.60 C LCb setrgbcolor
6056 4166 M
[ [(Helvetica) 180.0 0.0 true true 0 (MOD* Lite )]
] -60.0 MRshow
LT1
0.00 0.00 0.60 C 6164 4166 M
495 0 V
1130 772 M
32 -47 V
32 -51 V
32 74 V
32 -69 V
33 -5 V
32 9 V
32 -2 V
32 2 V
32 0 V
32 -35 V
32 -9 V
32 4 V
32 32 V
32 0 V
33 7 V
32 5 V
32 -34 V
32 -5 V
32 -5 V
32 6 V
32 10 V
32 -14 V
32 35 V
32 -28 V
32 0 V
33 9 V
32 40 V
32 -9 V
32 8 V
32 -33 V
32 18 V
32 -24 V
32 4 V
32 1 V
32 -4 V
32 -11 V
33 16 V
32 -5 V
32 9 V
32 7 V
32 -14 V
32 -2 V
32 -22 V
32 13 V
32 -7 V
32 2 V
33 -4 V
32 8 V
32 22 V
32 -5 V
32 9 V
32 -29 V
32 -3 V
32 -1 V
32 11 V
32 4 V
32 4 V
33 -13 V
32 -3 V
32 -6 V
32 -2 V
32 -6 V
32 -3 V
32 4 V
32 -6 V
32 318 V
32 2 V
33 37 V
32 21 V
32 -200 V
32 4 V
32 51 V
32 3 V
32 32 V
32 39 V
32 52 V
32 63 V
32 45 V
33 -109 V
32 -382 V
32 -2 V
32 -1 V
32 22 V
32 9 V
32 -1 V
32 -9 V
32 1 V
32 -8 V
32 -6 V
33 -7 V
32 10 V
32 -4 V
32 20 V
32 -3 V
32 -1 V
32 -1 V
32 -26 V
32 16 V
32 9 V
33 -2 V
32 9 V
32 4 V
stroke 4404 634 M
32 -4 V
32 7 V
32 -9 V
32 -1 V
32 3 V
32 -4 V
32 -4 V
32 23 V
33 2 V
32 5 V
32 7 V
32 -5 V
32 4 V
32 10 V
32 -21 V
32 5 V
32 0 V
32 57 V
33 -69 V
32 16 V
32 6 V
32 -16 V
32 -20 V
32 -1 V
32 -5 V
32 -8 V
32 9 V
32 -2 V
32 -14 V
33 10 V
32 -24 V
32 4 V
32 -4 V
32 -2 V
32 0 V
32 -1 V
32 0 V
32 1 V
32 -3 V
33 1 V
32 -1 V
32 2 V
32 -10 V
32 0 V
32 1 V
32 0 V
32 -1 V
32 1 V
32 0 V
32 0 V
33 0 V
32 0 V
32 0 V
32 1 V
32 0 V
32 2 V
32 -2 V
32 3 V
32 -1 V
32 -2 V
32 1 V
33 1 V
32 0 V
32 0 V
32 1 V
32 -2 V
32 0 V
32 0 V
32 0 V
32 0 V
1130 772 Crs
1162 725 Crs
1194 674 Crs
1226 748 Crs
1258 679 Crs
1291 674 Crs
1323 683 Crs
1355 681 Crs
1387 683 Crs
1419 683 Crs
1451 648 Crs
1483 639 Crs
1515 643 Crs
1547 675 Crs
1579 675 Crs
1612 682 Crs
1644 687 Crs
1676 653 Crs
1708 648 Crs
1740 643 Crs
1772 649 Crs
1804 659 Crs
1836 645 Crs
1868 680 Crs
1900 652 Crs
1932 652 Crs
1965 661 Crs
1997 701 Crs
2029 692 Crs
2061 700 Crs
2093 667 Crs
2125 685 Crs
2157 661 Crs
2189 665 Crs
2221 666 Crs
2253 662 Crs
2285 651 Crs
2318 667 Crs
2350 662 Crs
2382 671 Crs
2414 678 Crs
2446 664 Crs
2478 662 Crs
2510 640 Crs
2542 653 Crs
2574 646 Crs
2606 648 Crs
2639 644 Crs
2671 652 Crs
2703 674 Crs
2735 669 Crs
2767 678 Crs
2799 649 Crs
2831 646 Crs
2863 645 Crs
2895 656 Crs
2927 660 Crs
2959 664 Crs
2992 651 Crs
3024 648 Crs
3056 642 Crs
3088 640 Crs
3120 634 Crs
3152 631 Crs
3184 635 Crs
3216 629 Crs
3248 947 Crs
3280 949 Crs
3313 986 Crs
3345 1007 Crs
3377 807 Crs
3409 811 Crs
3441 862 Crs
3473 865 Crs
3505 897 Crs
3537 936 Crs
3569 988 Crs
3601 1051 Crs
3633 1096 Crs
3666 987 Crs
3698 605 Crs
3730 603 Crs
3762 602 Crs
3794 624 Crs
3826 633 Crs
3858 632 Crs
3890 623 Crs
3922 624 Crs
3954 616 Crs
3986 610 Crs
4019 603 Crs
4051 613 Crs
4083 609 Crs
4115 629 Crs
4147 626 Crs
4179 625 Crs
4211 624 Crs
4243 598 Crs
4275 614 Crs
4307 623 Crs
4340 621 Crs
4372 630 Crs
4404 634 Crs
4436 630 Crs
4468 637 Crs
4500 628 Crs
4532 627 Crs
4564 630 Crs
4596 626 Crs
4628 622 Crs
4660 645 Crs
4693 647 Crs
4725 652 Crs
4757 659 Crs
4789 654 Crs
4821 658 Crs
4853 668 Crs
4885 647 Crs
4917 652 Crs
4949 652 Crs
4981 709 Crs
5014 640 Crs
5046 656 Crs
5078 662 Crs
5110 646 Crs
5142 626 Crs
5174 625 Crs
5206 620 Crs
5238 612 Crs
5270 621 Crs
5302 619 Crs
5334 605 Crs
5367 615 Crs
5399 591 Crs
5431 595 Crs
5463 591 Crs
5495 589 Crs
5527 589 Crs
5559 588 Crs
5591 588 Crs
5623 589 Crs
5655 586 Crs
5688 587 Crs
5720 586 Crs
5752 588 Crs
5784 578 Crs
5816 578 Crs
5848 579 Crs
5880 579 Crs
5912 578 Crs
5944 579 Crs
5976 579 Crs
6008 579 Crs
6041 579 Crs
6073 579 Crs
6105 579 Crs
6137 580 Crs
6169 580 Crs
6201 582 Crs
6233 580 Crs
6265 583 Crs
6297 582 Crs
6329 580 Crs
6361 581 Crs
6394 582 Crs
6426 582 Crs
6458 582 Crs
6490 583 Crs
6522 581 Crs
6554 581 Crs
6586 581 Crs
6618 581 Crs
6650 581 Crs
6411 4166 Crs
% End plot #2
1.000 UL
LTb
1098 4499 N
0 -3923 V
5777 0 V
0 3923 V
-5777 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
